library(devtools)
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
Bodyweight
Bodyweight
Diet
?nlme
BodyWeight
?llines
?lines
?text
?axis
library(lattice)
library(datasets)
data(airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?splom
?print.trellis
?par
?trellis.par.set
library(ggplot2)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
install.packages("installr")
# installing/loading the package:
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr
updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
?setwd
?print
setwd("C:/Users/Cubbi_000/Desktop/Coursera/reproducible_research/project1/RepData_PeerAssessment1")
unzip('activity.zip')
activity <- read.csv('activity.csv')
View(activity)
str(activity)
by_day <- group_by(activity, date)
summarize(by_day, means_steps = mean(steps), na.rm = TRUE)
library(dplyr)
by_day <- group_by(activity, date)
summarize(by_day, means_steps = mean(steps), na.rm = TRUE)
summarize(by_day, means_steps = mean(steps, na.rm = TRUE))
summarize(by_day, total_steps = mean(steps, na.rm = TRUE))
summarize(by_day, total_steps = sum(steps, na.rm = TRUE))
summarize(by_day, total_steps = sum(steps))
mean(total_steps$total_steps)
total_steps <- summarize(by_day, total_steps = sum(steps))
mean(total_steps$total_steps)
mean(total_steps$total_steps, na.rm = TRUE)
by_day <- group_by(activity, date)
total_steps <- summarize(by_day, total_steps = sum(steps))
mean(total_steps$total_steps, na.rm = TRUE)
total_steps <- summarize(by_day, steps = sum(steps))
mean(total_steps$steps, na.rm = TRUE)
?hist
hist(total_steps$steps)
hist(total_steps$steps, xlab = 'Steps Taken Per Day')
hist(total_steps$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day')
hist(total_steps$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day', breaks = 10)
hist(total_steps$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day', breaks = 8)
hist(total_steps$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day', breaks = 8)
hist(total_steps$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day', breaks = 6)
hist(total_steps$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day')
hist(total_steps$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day')
by_time <- group_by(activity, interval)
steps_time <- summarize(by_time, steps = sum(steps))
View(steps_time)
steps_time <- summarize(by_time, steps = sum(steps, na.rm = TRUE))
View(steps_time)
steps_time <- summarize(by_time, steps = mean(steps, na.rm = TRUE))
View(by_time)
View(steps_time)
with(steps_time, plot(interval, steps, type = 'l'))
with(steps_time, plot(interval, steps, type = 'l', main = 'Average Steps Taken for Each Interval')
)
with(steps_time, plot(interval, steps, type = 'l', main = 'Average Steps Taken for Each Interval'))
with(steps_time, plot(interval, steps, type = 'l', main = 'Average Steps Taken for Each Interval'))
?plot
max(steps_time$steps)
steps_time[,max(steps_time$steps)]
steps_time[steps_time$steps = max(step_time$steps),]
steps_time[steps_time$steps == max(step_time$steps),]
steps_time[steps_time$steps == max(steps_time$steps),]
View(steps_time)
?apply
is.na(activity)
?any
df[apply(is.na(activity), 1, any), ]
activity[apply(is.na(activity), 1, any), ]
na_rows <- activity[apply(is.na(activity), 1, any), ]
View(na_rows)
str(na_rows)
summary(na_rows)
summary(activity[apply(is.na(activity), 1, any), ])
?left_join
View(by_time)
View(steps_time)
activity2 <- left_join(activity, steps_time, by = interval)
activity2 <- left_join(activity, steps_time)
View(activity2)
activity2 <- left_join(activity, steps_time)
View(activity2)
by_time <- group_by(activity, interval)
steps_time <- summarize(by_time, steps_avg = mean(steps, na.rm = TRUE))
with(steps_time, plot(interval, steps_avg, type = 'l', main = 'Average Steps Taken for Each Interval'))
steps_time[steps_time$steps_avg == max(steps_time$steps_avg),]
summary(activity[apply(is.na(activity), 1, any), ])
activity2 <- left_join(activity, steps_time)
View(activity2)
activity2[is.na(activity2$steps),]
activity2[is.na(activity2$steps),1] <- activity2[is.na(activity2$steps),4]
View(activity2)
The median is very similar, at 10,765 steps per day.
act.no.na <- activity2[1:3,]
View(act.no.na)
act.no.na <- activity2[,1:3]
View(act.no.na)
by_day2 <- group_by(act.no.na, date)
total_steps2 <- summarize(by_day2, steps = sum(steps))
hist(total_steps2$steps, xlab = 'Steps Taken Per Day', main = 'Histogram of Steps Per Day, NAs Removed')
summary(total_steps)
summary(total_steps2)
View(total_steps2)
?weekdays
weekdays(activity$date)
?as.Date
activity$date <- as.Date(activity$date)
str(activity)
weekdays(activity$date)
activity$weekday <- weekdays(activity$date)
View(activity)
activity$day <- weekdays(activity$date)
activity$weekday <-with(activity,
if(day %in% ('Saturday', 'Sunday')) {
weekday <- 'Y'
}
else {
weekday <- 'N'
})
activity$weekday <-with(activity,
if(day %in% c('Saturday', 'Sunday')) {
weekday <- 'Y'
}
else {
weekday <- 'N'
})
View(activity)
activity$weekday <-with(activity,
if(day %in% c('Saturday', 'Sunday')) {
weekday <- 'N'
}
else {
weekday <- 'Y'
})
View(activity)
activity
activity$weekday <-with(activity,
if(day %in% c('Saturday', 'Sunday')) {
weekday <- 'N'
}
else {
weekday <- 'Y'
})
activity$weekday <-with(activity,
if(day == 'Saturday') {
weekday <- 'N'
}
else {
weekday <- 'Y'
})
activity$weekday <- if(activity$day == 'Saturday'){'Y'} else{'N'}
if(activity$day == 'Saturday'){'Y'} else{'N'}
for (i in activity){
if(activity$day == 'Saturday'){'Y'} else{'N'}
}
if(day == 'Saturday'){'Y'} else{'N'}
for (i in activity){
if(day == 'Saturday'){'Y'} else{'N'}
}
for (i in activity$day){
if(i == 'Saturday'){'Y'} else{'N'}
}
test <- for (i in activity$day){
if(i == 'Saturday'){'Y'} else{'N'}
}
activity$weekday <- activity$day %in% c('Saturday', 'Sunday')
View(activity)
activity
?lattic
?lattice
weekend <- activity$day %in% c('Saturday', 'Sunday')
activity$weekday <- !(activity$day %in% c('Saturday', 'Sunday'))
activity
weekend <- activity$weekday == FALSE
weekend <- subset(activity, weekday == FALSE)
act.no.na <- activity2[,1:3]
weekday <- subset(activity, weekday == TRUE)
str(activity)
?ifelse
?as.Factor
as.factor
activity$weekday <- as.factor(ifelse(activity$day %in% ('Saturday','Sunday'), 'Weekend', 'Weekday'))
activity$weekday <- as.factor(ifelse(activity$day %in% c('Saturday','Sunday'), 'Weekend', 'Weekday'))
str(activity)
by_time2 <- group_by(activity, interval, weekday)
steps_time2 <- summarize(by_time, steps_avg = mean(steps, na.rm = TRUE))
View(steps_time2)
steps_time2 <- summarize(by_time2, steps_avg = mean(steps, na.rm = TRUE))
View(steps_time2)
library(lattice)
xyplot(steps_avg~interval | weekday, layout = c(1,2))
str(steps_time2)
xyplot(steps_avg~interval | weekday, layout = c(1,2))
test1 <- steps_time2
str(test1)
xyplot(steps_avg~interval | weekday, layout = c(1,2))
xyplot(steps_avg~interval | weekday, layout = c(1,2))
?as.dataframe
?as.Dataframe
?as.data.frame
test1 <- as.data.frame(steps_time2)
str(test1)
steps_time2 <- as.data.frame(summarize(by_time2, steps_avg = mean(steps, na.rm = TRUE)))
xyplot(steps_avg~interval | weekday, layout = c(1,2))
xyplot(steps_avg ~ interval | weekday, layout = c(1,2))
str(steps_time2)
str(activity)
xyplot(steps_avg ~ interval | weekday)
with(steps_time2, xyplot(steps_avg ~ interval | weekday, layout = c(1,2)))
steps_time2 <- summarize(by_time2, steps_avg = mean(steps, na.rm = TRUE))
with(steps_time2, xyplot(steps_avg ~ interval | weekday, layout = c(1,2)))
?xyplot
with(steps_time2, xyplot(steps_avg ~ interval | weekday, layout = c(1,2), type = 'l'))
